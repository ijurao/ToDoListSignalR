{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/ErrorHandlres/IErrorHandler.ts","./src/app/ErrorHandlres/ToastErrorHandler.service.ts","./src/app/ToDoItem/ToDoItem.component.ts","./src/app/ToDoItem/ToDoItem.component.html","./src/app/ToDoList/ToDoList.component.ts","./src/app/ToDoList/ToDoList.component.html","./src/app/_Resolvers/ConnectedUsersPanel.resolver.ts","./src/app/_Resolvers/currenUser.resolver.ts","./src/app/_Resolvers/toDoList.resolver.ts","./src/app/_Services/auth.service.ts","./src/app/_Services/http.interceptors/http.error.interceptor.ts","./src/app/_Services/http.interceptors/token.interceptor.ts","./src/app/_Services/signalRService.service.ts","./src/app/_Services/toDoList.service.ts","./src/app/_guards/authGuard.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/modal-assign-todoitem/modal-assign-todoitem.component.ts","./src/app/modal-assign-todoitem/modal-assign-todoitem.component.html","./src/app/users-panel/users-panel.component.ts","./src/app/users-panel/users-panel.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAA2C;;AAGpC,MAAe,aAAa;;0EAAb,aAAa;gGAAb,aAAa,WAAb,aAAa;6FAAb,aAAa;cADlC,wDAAU;;;;;;;;;;;;;;ACFX;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,wBAAwB;IAErC,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAAI,CAAC;IAClD,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;;gGALU,wBAAwB;2GAAxB,wBAAwB,WAAxB,wBAAwB,mBAFvB,MAAM;6FAEP,wBAAwB;cAHpC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEACE;QAAA,6EACF;QAAA,4DAAI;;6FDKS,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAQsD;;;;;;;;;;;;;;IC4CH,wEAAyF;IAAnC,wZAA6B;IAAE,4DAAI;;;;IACxF,wEAAoF;IAAnC,yZAA6B;IAAE,4DAAI;;;;IAKlK,qEACI;IAAA,2EAAyB;IAAA,wEAAoD;IAAzB,oZAAoB;IAAC,4DAAI;IAAA,4DAAO;IAExF,4DAAK;;;;;IAbT,yEACI;IAAA,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC7B,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEACI;IAAA,2EAAyE;IAAA,gHAAqF;IAAI,4DAAO;IACzK,2EAA0E;IAAA,gHAAgF;IAAI,4DAAO;IACrK,mEAAM;IAAA,4EACJ;IAAA,yEAA4D;IAAnC,8VAA6B;IAAE,4DAAI;IAAA,4DAAO;IAEzE,4DAAK;IACL,oHACI;IAGR,4DAAK;;;;IAdD,yJAAoC;IAChC,0DAAoB;IAApB,oFAAoB;IACpB,0DAAiB;IAAjB,iFAAiB;IAE2D,0DAAuB;IAAvB,oFAAuB;IACtB,0DAAsB;IAAtB,mFAAsB;IAKnG,0DAAiC;IAAjC,6FAAiC;;;;IASzC,6EAA2E;IAA9C,+TAAwB;IAAsB,mEACvE;IAAA,sEAAW;IAAA,4DAAS;;ADpDrC,MAAM,iBAAiB;IAS5B,YAAoB,KAAqB,EAAU,eAAgC,EAAU,WAAwB,EACjG,MAAc,EAAU,cAA8B,EAAS,YAAsB,EACrF,MAAqB;QAFrB,UAAK,GAAL,KAAK,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QACjG,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAS,iBAAY,GAAZ,YAAY,CAAU;QACrF,WAAM,GAAN,MAAM,CAAe;QANxC,gBAAW,GAAG,EAAE,CAAC;QAClB,gBAAW,GAAG,CAAC,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;IAI+B,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAE,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;QAC9E,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1C,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAAA,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,IAAc,EAAG,EAAE;YAC9E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAc,EAAE,EAAE;YAC1E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACP,IAAI,CAAC,WAAW,EAAE,CAAC;IAClB,CAAC;IAEF,cAAc,CAAC,IAAc;QAE5B,MAAO,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IACrD,CAAC;IACD,WAAW;QACT,OAAQ,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC;IAChD,CAAC;IACD,kBAAkB;QAChB,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC;IACD,IAAI,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mHAA4B,CAAC;QACtE,QAAQ,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QAC1E,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC/C,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;QAC9B,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,GAAE,CAAC,CAAC,CAAC;IAEnB,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC7G,CAAC,GAAe,EAAE,EAAE;YAClB,IAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EACjB;gBACC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAC5C;iBACG;gBACF,IAAI,CAAC,GAAG,GAAG,IAAI;aAChB;QACD,CAAC,CAAC,CAAC;IACT,CAAC;IAED,QAAQ;QACR,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IAC1C,CAAC;IACD,KAAK;QACH,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,YAAY;QACV,QAAQ,CAAC,eAAe,CAAC,SAAS,GAAG,CAAC,CAAC;IACzC,CAAC;IACD,UAAU,CAAC,EAAE;QAEX,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAa,EAAG,EAAE;YAC/D,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;YACpE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;;kFAxGY,iBAAiB;iGAAjB,iBAAiB;QChB9B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,oEAAmH;QAAA,gEAClH;QAAA,oEAAG;QAAA,oEAAG;QAAA,uDAAqC;QAAA,4DAAI;QAAA,4DAAI;QAClD,yEACI;QAAA,4EAAsE;QAAxB,yIAAS,YAAa,IAAC;QAAC,uEAAW;QAAA,4DAAS;QAC9F,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACJ,4DAAM;QACR,0EACE;QAAA,0EAEI;QAAA,0EACI;QAAA,0EAEM;QAAA,kFAAwE;QAC5E,4DAAM;QACR,2EACI;QAAA,0EACE;QAAA,2EACI;QAAA,4EACE;QAAA,oEAA0B;QAC5B,4DAAO;QACP,6EAKJ;QAFW,yJAAiB,iBAAa,IAAC;QAHtC,4DAKJ;QAAA,4DAAM;QACR,4DAAM;QACN,iEACF;QAAA,0EACE;QAAA,2EAIE;QADE,6IAAY,cAAU,IAAC;QACzB,6EACI;QAAA,yEACA;QAAA,sEACI;QAAA,0EAAgB;QAAA,uEAAW;QAAA,4DAAK;QAChC,0EAAgB;QAAA,uEAAW;QAAA,4DAAK;QAChC,0EAAgB;QAAA,mEAAO;QAAA,4DAAK;QAChC,4DAAK;QACL,4DAAQ;QACR,yEACA;QAAA,+GACI;QAcJ,4DAAQ;QACZ,4DAAQ;QACR,0EACE;QAAA,2EACE;QAAA,sHAA2E;QAE7E,4DAAM;QACR,4DAAM;QACP,4DAAM;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QA7DN,4DAEI;QAHN,4DACE;;QATW,0DAAqC;QAArC,0GAAqC;QAcjB,0DAAoC;QAApC,4FAAoC;QAY1C,0DAAyB;QAAzB,oFAAyB;QAMjC,0DAA4B;QAA5B,qFAA4B;QAYa,2DAAmC;QAAnC,kFAAmC;QAmBnE,0DAAoB;QAApB,6EAAoB;;6FDnDnC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;;AAOpC,MAAM,sBAAsB;IAC/B,YAAoB,eAAgC,EAAU,WAAwB,EAAU,cAA8B;QAA1G,oBAAe,GAAf,eAAe,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAQ,CAAC;IACvI,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC/D,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;QACvC,kDAAkD;QACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;IAChD,CAAC;;4FAPQ,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB;6FAAtB,sBAAsB;cAFlC,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,WAAW;IACpB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAO,CAAC;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC7D,OAAQ,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IAC9C,CAAC;;sEAJQ,WAAW;8FAAX,WAAW,WAAX,WAAW;6FAAX,WAAW;cAFvB,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACN;AACK;;;;AAKpC,MAAM,gBAAgB;IAGzB,YAAoB,eAAgC,EAAS,WAAwB;QAAjE,oBAAe,GAAf,eAAe,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAFvF,gBAAW,GAAG,CAAC,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;IACgF,CAAC;IAC7F,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC7D,OAAQ,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,EAAC,IAAI,CAAC,WAAW,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClH,iEAAU,CAAC,KAAK,CAAC,EAAE;YAEf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACV,CAAC;;gFAXQ,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAF5B,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AAEN;AAEnB;;;AAOjC,MAAM,WAAW;IAExB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QADjC,oBAAe,GAAI,IAAI,0DAAY,EAAE,CAAC;QAEhD,IAAI,CAAC,OAAO,GAAG,wEAAW,CAAC,OAAO,CAAC;IAElC,CAAC;IAIE,QAAQ;QACJ,OAAO,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAEL,KAAK,CAAC,IAAU;QAEf,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,EAAE,IAAI,CAAC,CAAC,IAAI,CAClE,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YACpB,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;YAChC,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,KAAK,EAAC;gBACR,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aACxC;YACD,IAAI,IAAI,EAAC;gBACP,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;QAEH,CAAC,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAM;QAEJ,cAAc,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,cAAc;QAEZ,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAEpD,CAAC;IAED,UAAU;QACR,OAAO,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC;IAClD,CAAC;IAED,gBAAgB;QAEf,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;IACtD,CAAC;;sEAjDY,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;kBAEA,oDAAM;;;;;;;;;;;;;;ACZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AAC9E;AACI;AAEE;;;AAI9C,MAAM,oBAAoB;IAC7B,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAAG,CAAC;IACnD,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAC9C,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CACxB,0EAAU,CAAC,KAAK,CAAC,EAAE;YACf,IAAI,SAAS,GAAG,EAAE,CAAC;YACnB,IAAK,CAAC,KAAK,YAAY,sEAAiB,CAAC,EAAC;gBAEtC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAC,EAAE,oBAAoB;oBACzC,SAAS,GAAG,mDAAmD,CAAC;iBACnE;qBACG;oBACC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;iBAC1C;gBACL,iCAAiC;gBACjC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;gBACzC,OAAO,uDAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aAEpC;QACP,CAAC,CAAC,CACH,CAAC;IACV,CAAC;IAED,iBAAiB,CAAE,KAAwB;QACvC,OAAO,KAAK,CAAC,KAAK,CAAC;IACvB,CAAC;;wFAzBY,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB;6FAApB,oBAAoB;cAFhC,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAA2C;;;AAUpC,MAAM,gBAAgB;IAC3B,YAAmB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAG,CAAC;IACxC,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAEpD,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,IAAI,EACvC;YACA,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;iBAChD;aACF,CAAC,CAAC;SACN;QACG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;gFAbU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;6FAAhB,gBAAgB;cAD5B,wDAAU;;;;;;;;;;;;;;ACTX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACtB;AACgB;;;;AAWpD,MAAM,cAAc;IAO3B,YAAoB,WAAwB,EAAS,YAA0B;QAA3D,gBAAW,GAAX,WAAW,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAc;QANrE,mBAAc,GAAW,IAAI,KAAK,EAAE,CAAC;QAEnC,oBAAe,GAAG,IAAI,0DAAY,EAAE,CAAC;QACrC,YAAO,GAAG,IAAI,0DAAY,EAAE,CAAC;QAShC,oBAAe,GAAG,GAAG,EAAE;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,oEAA4B,EAAE;iBAC9B,OAAO,CAAC,wEAAW,CAAC,UAAU,EAAE,EAAC,eAAe,EAAE,IAAI;gBACvD,SAAS,EAAE,iEAAyB,CAAC,UAAU,EAAE,kBAAkB,EAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;iBACzG,KAAK,EAAE,CAAC;YAEjC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,IAAY,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,IAAY,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAS,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9E,IAAI,CAAC,aAAa;iBACf,KAAK,EAAE;iBACP,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACpC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,mCAAmC,GAAG,wEAAW,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;QACpG,CAAC;QAnBD,IAAI,CAAC,aAAa,GAAG,IAAI,oEAA4B,EAAE;aACtD,OAAO,CAAC,wEAAW,CAAC,UAAU,EAAE,EAAC,eAAe,EAAE,IAAI;YACvD,SAAS,EAAE,iEAAyB,CAAC,UAAU,EAAE,kBAAkB,EAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;aACzG,KAAK,EAAE,CAAC;IACX,CAAC;IAkBQ,aAAa;QAClB,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACzE,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAC,EAAE,gBAAgB;YAC/C,YAAY,CAAC,KAAK,EAAE,CAAC;SACvB;QACA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEK,UAAU,CAAC,IAAY;QAG5B,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEnC,CAAC;IAEO,gBAAgB;QACtB,MAAM,IAAI,GAAK,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAE;QACvD,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACnC,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;;4EAlDU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;kBAIE,oDAAM;;kBACN,oDAAM;;;;;;;;;;;;;;ACjBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACmB;AACH;AAEtB;;;AAK9B,MAAM,eAAe;IAE5B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,YAAO,GAAY,wEAAW,CAAC,OAAO;IACE,CAAC;IAEzC,YAAY,CAAC,MAAc,EAAE,IAAI,EAAE,QAAQ;QAE3C,IAAI,MAAM,GAAI,IAAI,+DAAU,EAAE,CAAC;QAC/B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,MAAM,EAAE,EAAC,MAAM,EAAC,CAAC;aAC5E,IAAI,CACH,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACb,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IAEJ,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,EAAC,aAAa,EAAE,WAAW,EAAC,CAAC,CAAC;IACzF,CAAC;IAED,UAAU,CAAC,EAAU,EAAE,SAAmB;QACxC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IAEzE,CAAC;IAED,MAAM,CAAC,UAAkB,EAAE,MAAc;QAEvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAG,UAAU,GAAG,GAAG,GAAG,MAAM,EAAE,EAAE,CAAC,CAAC;IAE3F,CAAC;IACD,UAAU,CAAC,EAAE;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAG,EAAE,EAAG,EAAE,CAAC,CAAC;IAErE,CAAC;;8EApCY,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAKpC,MAAM,SAAS;IAElB,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IACpE,CAAC;IACD,WAAW;QACP,IAAG,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC;SAChB;aACG;YACA,OAAO,IAAI,CAAC;SACf;IACL,CAAC;;kEAZQ,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFN,MAAM;6FAET,SAAS;cAHrB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACNH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACW;AACA;AACT;AAC0B;AACpB;AACf;;;AAGhD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE,OAAO,EAAE,EAAC,SAAS,EAAG,6EAAgB,EAAG,aAAa,EAAG,8FAAsB;YACrE,IAAI,EAAE,0EAAW,EAAC,EAAC;IAC9E,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAC;IACrE,EAAC,IAAI,EAAE,IAAI,EAAG,SAAS,EAAE,qEAAc,EAAC;CAC1C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;;;;;AAQjD,MAAM,YAAY;IAGvB;;OAEG;IACH,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ5C,UAAK,GAAG,gBAAgB,CAAC;IAOzB,CAAC;;wEATU,YAAY;4FAAZ,YAAY;QCRzB,gFAAwF;QACxF,2EAA+B;;QADE,yEAAgB;;6FDQpC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACM;AACY;AAEH;AACT;AACU;AACkB;AACiB;AACb;AACL;AAEhC;AAC2C;AACtB;AACG;AACA;AACA;AACiB;AACT;AACS;AACpB;AACwC;;;AAkChG,MAAM,SAAS;;wFAAT,SAAS,cAHhB,2DAAY;4IAGL,SAAS,mBAbR;QACR,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,uGAAoB,EAAE,KAAK,EAAE,IAAI,EAAE;QAC3E,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,+FAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;QACvE,EAAE,OAAO,EAAE,2EAAa,EAAE,QAAQ,EAAE,kGAAwB,EAAE;QAC9D,8EAAgB;QAChB,+FAAsB;QACtB,2EAAW;KAEb,YAnBQ;YACN,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,4FAAuB;YACvB,wDAAY,CAAC,OAAO,EAAE;YACtB,wFAA0B;YAC1B,oEAAgB;YAChB,wEAAoB;SACtB;mIAcS,SAAS,mBA/BhB,2DAAY;QACZ,qEAAc;QACd,+EAAiB;QACjB,+EAAiB;QACjB,uFAAmB;QACnB,oHAA4B,aAG5B,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;QACX,4FAAuB,4DAEvB,wFAA0B;QAC1B,oEAAgB;QAChB,wEAAoB;6FAeb,SAAS;cAjCrB,sDAAQ;eAAC;gBACP,YAAY,EAAE;oBACX,2DAAY;oBACZ,qEAAc;oBACd,+EAAiB;oBACjB,+EAAiB;oBACjB,uFAAmB;oBACnB,oHAA4B;iBAC9B;gBACD,OAAO,EAAE;oBACN,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;oBACX,4FAAuB;oBACvB,wDAAY,CAAC,OAAO,EAAE;oBACtB,wFAA0B;oBAC1B,oEAAgB;oBAChB,wEAAoB;iBACtB;gBACD,SAAS,EAAE;oBACR,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,uGAAoB,EAAE,KAAK,EAAE,IAAI,EAAE;oBAC3E,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,+FAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;oBACvE,EAAE,OAAO,EAAE,2EAAa,EAAE,QAAQ,EAAE,kGAAwB,EAAE;oBAC9D,8EAAgB;oBAChB,+FAAsB;oBACtB,2EAAW;iBAEb;gBACD,SAAS,EAAE;oBACR,2DAAY;iBACd;aACH;;;;;;;;;;;;;;ACxDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAe3C,MAAM,cAAc;IAIzB,YAAoB,WAAwB,EAAU,MAAqB,EAAU,MAAc,EAAU,OAAuB;QAAhH,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAgB;QAFpI,oBAAe,GAAmB,IAAI,cAAc,EAAE,CAAE;QAGtD,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,iBAAiB,CAAC;QAClD,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC5C,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CACpD,IAAI,CAAC,EAAE;YAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QAAA,CAAC,EAC9C,KAAK,CAAC,EAAE,GAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC/B,GAAG,EAAE,GAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;IACpD,CAAC;IACD,QAAQ;QACN,OAAQ,CAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,KAAK,IAAI,CAAC,CAAC;IAC9F,CAAC;IAED,MAAM;QACH,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;;4EAzBY,cAAc;8FAAd,cAAc;QCf3B,uEACE;QAAA,yEAEE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAmC;QAAA,kEAAO;QAAA,4DAAK;QAC/C,6EACE;QAD4C,sIAAU,WAAO,IAAC;QAC9D,0EACE;QAAA,4EAEF;QADE,qMAAsC;QADtC,4DAEF;QAAA,4DAAM;QAEN,0EACE;QAAA,6EAGF;QAFE,qMAAsC;QADtC,4DAGF;QAAA,4DAAM;QAEN,2EACE;QAAA,wEACA;QAAA,6EAAuD;QAAA,6EAAiB;QAAA,4DAAQ;QAClF,4DAAM;QACN,8EAC+B;QAAA,qEAAQ;QAAA,4DAAS;QAChD,qEACA;QAEF,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAO;;;QAxBS,2DAAsC;QAAtC,iGAAsC;QAKtC,0DAAsC;QAAtC,iGAAsC;QASxC,0DAA6B;QAA7B,gFAA6B;;6FDV9B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;AA4BM,MAAM,cAAc;CAG1B;;;;;;;;;;;;;AE7CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;ICUrD,yEAIG;IAAA,uDAEH;IAAA,6EAAwD;IAAxB,iaAAsB;IAAE,mEAAO;IAAA,4DAAS;IAC1E,4DAAK;;;IAHA,0DAEH;IAFG,4FAEH;;;IAPF,wEACE;IAAA,2HAIG;IAIL,4DAAK;;;;IAPH,0DAAmE;IAAnE,4IAAmE;;ADAhE,MAAM,4BAA4B;IAKvC,YAAoB,eAAgC,EAAQ,WAA2B,EACnE,WAAwB;QADxB,oBAAe,GAAf,eAAe,CAAiB;QAAQ,gBAAW,GAAX,WAAW,CAAgB;QACnE,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,MAAM,CAAC,IAAI;QACR,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAE,GAAG,CAAC,EAAE;YACjE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IACH,SAAS,CAAC,IAAI;QACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;QACzD,OAAO,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC;IACpE,CAAC;;wGApBY,4BAA4B;4GAA5B,4BAA4B;QCVzC,yEACE;QAAA,wEAAwB;QAAA,uEAAY;QAAA,4DAAK;QACzC,4EACE;QADqD,oJAAS,wBAAoB,aAAa,CAAC,IAAC;QACjG,0EAAyB;QAAA,iEAAO;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAM;QACN,yEACE;QAAA,oEAAI;QAAA,uDAAwC;QAAA,4DAAI;QAChD,sHACE;QASJ,4DAAM;QACN,0EACE;QAAA,6EAA8F;QAA3C,qJAAS,sBAAkB,aAAa,CAAC,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC9G,4DAAM;;QAdA,0DAAwC;QAAxC,mHAAwC;QACpB,0DAA+B;QAA/B,8EAA+B;;6FDE5C,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,uCAAuC,CAAC;aACrD;;kBAGE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;AEdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;ICMrC,yEACI;IAAA,sEACA;IAAA,0EACI;IAAA,oEACJ;IAAA,4DAAO;IACP,4DAAM;IACN,yEAAmB;IAAA,2EAAqD;IAAA,uDAAiB;IAAA,4DAAO;IAC5F,0EAAiD;IAAA,uDAAiB;IAAA,4DAAM;IAC5E,4DAAM;IACN,0EACI;IAAA,sEAAkE;IACtE,4DAAM;IACV,4DAAM;;;IANsE,0DAAiB;IAAjB,iFAAiB;IACpC,0DAAiB;IAAjB,iFAAiB;;;IAR1E,wEACA;IAAA,+HACI;IAYR,qEAAe;;;;IAbyB,0DAAiC;IAAjC,gGAAiC;;ADQlF,MAAM,mBAAmB;IAE9B,YAAoB,cAA8B,EAAU,IAAgB,EAAU,WAAwB,EAC1F,KAAqB,EAAU,MAAqB;QADpD,mBAAc,GAAd,cAAc,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC1F,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;IACxE,CAAC;IAED,QAAQ;QAEN,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,IAAY,EAAE,EAAE;YACzD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAChC,CAAC,CACA,CAAC;IAEJ,CAAC;IACD,gBAAgB;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC;IAC7C,CAAC;IACD,cAAc,CAAC,IAAI;QACjB,OAAO,IAAI,CAAC,gBAAgB,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC;IAC7C,CAAC;;sFAnBU,mBAAmB;mGAAnB,mBAAmB;QCdhC,yEAEQ;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,iIACA;QAcR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAlB4B,0DAAuC;QAAvC,sFAAuC;;6FDS5D,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;kBAEE,mDAAK;;;;;;;;;;;;;;AEfR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,8BAA8B;IACvC,UAAU,EAAE,+BAA+B;CAC5C,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class IErrorHandler {\n\n    public abstract handleError(error: string);\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { IErrorHandler } from './IErrorHandler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastErrorHandlerService implements IErrorHandler {\n\nconstructor(private toastService: ToastrService) { }\n  handleError(error: string) {\n    this.toastService.error(error);\n  }\n \n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ToDoItem',\n  templateUrl: './ToDoItem.component.html',\n  styleUrls: ['./ToDoItem.component.css']\n})\nexport class ToDoItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  ToDoItem works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToDoListService } from '../_Services/toDoList.service';\nimport { AuthService } from '../_Services/auth.service';\nimport { User } from '../_Models/Users/User';\nimport { SignalRService } from '../_Services/signalRService.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalAssignTodoitemComponent } from '../modal-assign-todoitem/modal-assign-todoitem.component';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-ToDoList',\n  templateUrl: './ToDoList.component.html',\n  styleUrls: ['./ToDoList.component.css']\n})\nexport class ToDoListComponent implements OnInit {\n   newToDoItem: string;\n   toDoItems: ToDoItem[];\n   conectedUsers:  User[];\n   currentUser: User;\n   closeResult = '';\n  currentPage = 2;\n  pageSize = 10;\n  end: boolean;\n  constructor(private route: ActivatedRoute, private toDoListService: ToDoListService, private authService: AuthService,\n              private router: Router, private signalRService: SignalRService,private modalService: NgbModal,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(resul => {\n      this.currentUser = resul.user;\n    });\n\n    this.route.data.subscribe(resul => {\n      this.toDoItems = resul.toDoItems;\n    });\n\n    this.route.data.subscribe(resul  => this.conectedUsers = resul.conectedUsers);\n    this.signalRService.newTask.subscribe(res => {\n      res.isNew = true;\n      this.toDoItems.unshift(res);\n      this.toastr.info(\"you have a new task\")});\n  }\n\n  addToDoItem(){\n    this.toDoListService.addToDoItem(this.newToDoItem).subscribe((next: ToDoItem ) =>\n      {this.toastr.success(\"todo added!\");\n       this.toDoItems.unshift(next);\n       this.newToDoItem = \"\";\n    });\n  }\n\n  logout(){\n    this.authService.logout();\n    this.signalRService.disconectUser();\n    this.router.navigate(['/login']);\n  }\n\n  markAsDone(toDoId){\n    this.toDoListService.markAsDone(toDoId, true).subscribe((data: ToDoItem) => {\n     this.modifyElements(data);\n    });\n  }\n  onEnter() {\n  this.addToDoItem();\n   }\n\n  modifyElements(item: ToDoItem){\n\n   const  objIndex = this.toDoItems.findIndex((obj => obj.id === item.id));\n   this.toDoItems[objIndex].completed = item.completed;\n  }\n  getUserData(){\n    return  this.authService.currentUser.userName;\n  }\n  currentUserIsAdmin(){\n    return (this.currentUser.userRoles.findIndex(x => x.role === 'Admin') !== -1);\n  }\n  open(todoitem) {\n   const modalRef =  this.modalService.open(ModalAssignTodoitemComponent)\n   modalRef.componentInstance.users = this.signalRService.getConectedUsers();\n   modalRef.componentInstance.todoitem = todoitem;\n   modalRef.result.then(res => {\n    const index = this.toDoItems.findIndex(tdi => tdi.id === res.id);\n    this.toDoItems[index] = res;\n  }, (reason) => {});\n\n  }\n\n  private addNewItems(){\n    this.toDoListService.getToDoItems(this.authService.getCurrentUserId(),this.currentPage,this.pageSize).subscribe( \n      (res: ToDoItem[]) =>{\n        if(res.length > 0)\n        {\n         this.toDoItems = this.toDoItems.concat(res);\n        }\n        else{\n          this.end = true\n        }\n        });\n  }\n  \n  onScroll(){\n  this.addNewItems();\n  this.currentPage = this.currentPage + 1;\n}\nisAll(){\n  return this.end;\n}\n\nbackToTheTop(){\n  document.documentElement.scrollTop = 0;\n}\ndeleteToDo(id){\n\n  this.toDoListService.deleteToDo(id).subscribe((res: ToDoItem ) =>{\n    const index = this.toDoItems.findIndex( item => item.id === res.id);\n    this.toDoItems.splice(index, 1);\n  });\n}\n\n\n\n}\n","<div class=\"col-12\">\n  <div class=\"row\">\n    <div class=\"col-12 ml-auto text-center py-2\">\n      <img src=\"https://img.icons8.com/color/48/000000/administrator-male.png\" class=\"rounded-circle\" alt=\"Cinque Terre\"><br>\n       <p><b>Welcome {{this.currentUser.userName}}</b></p>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-success\" (click)=\"this.logout()\">Logout User</button>\n        </div>\n    </div>\n    \n</div>\n  </div>\n<div class=\"page-container\" id=\"page-content\">\n  <div class=\"padding\">\n   \n      <div class=\"row container d-flex justify-content-center\">\n          <div class=\"col-sm-4\">\n           \n                <app-users-panel [conectedUsers]=\"this.conectedUsers\"></app-users-panel>\n            </div>     \n          <div class=\"col-sm-8\">\n              <div class=\"row\">\n                <div class=\"input-group\"> \n                    <span class=\"input-group-text\"> \n                      <i class=\"fa fa-plus\"></i> \n                    </span> \n                    <input type=\"text\" class=\"form-control\"\n                           placeholder=\"Add todo item\" \n                           id=\"box\" style=\"width: 30vw\"\n                           (keydown.enter)=\"addToDoItem()\" \n                           [(ngModel)]=\"newToDoItem\"/> \n                </div> \n              </div>\n              <br/> \n            <div class=\"row\">\n              <div class=\"container\" infiniteScroll \n                   [infiniteScrollDistance]=\"1\" \n                   [infiniteScrollThrottle]=\"50\"\n                  (scrolled)=\"onScroll()\">\n                <table class=\"table table-striped table-dark\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Assigned To</th>\n                        <th scope=\"col\">Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr [ngClass]=\"{'newItem ': todo.isNew}\"*ngFor=\"let todo of this.toDoItems\">\n                        <td>{{todo.description}}</td>\n                        <td>{{todo.userName}}</td>\n                        <td>\n                            <span style=\"cursor: pointer;\" class=\"icon-stack\" title=\"mark as done\">  <i *ngIf=\"!todo.completed\" class=\"fa fa-check-circle\" (click)=\"markAsDone(todo.id)\" ></i></span>\n                            <span style=\"cursor: pointer;\" class=\"icon-stack\" title=\"mark as pending\"><i *ngIf=\"todo.completed\"  class=\"fa fa-clock-o\" (click)=\"markAsDone(todo.id)\" ></i></span>\n                            &nbsp;<span style=\"cursor: pointer;color:red;\" class=\"icon-stack\" title=\"delete\">\n                              <i   class=\"fa fa-trash\" (click)=\"deleteToDo(todo.id)\" ></i></span>\n\n                        </td>\n                        <td *ngIf=\"this.currentUserIsAdmin()\">\n                            <span class=\"icon-stack\"><i class=\"fa fa-user-plus\" (click)=\"open(todo)\"></i></span>\n\n                        </td>\n                    </tr>  \n                    </tbody>   \n                </table>\n                <div class=\"row\">\n                  <div class=\"col text-center\">\n                    <button *ngIf=\"this.isAll()\" (click)=\"backToTheTop()\" class=\"btn btn-link\"><i class=\"fa fa-angle-double-up\">\n                    </i>back to top</button> \n                  </div>\n                </div>  \n               </div>                      \n          </div>\n      </div>\n  </div>\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\r\nimport { ToDoListService } from '../_Services/toDoList.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../_Services/auth.service';\r\nimport { User } from '../_Models/Users/User';\r\nimport { SignalRService } from '../_Services/signalRService.service';\r\n\r\n@Injectable()\r\n\r\nexport class ConnectedUsersResolver implements Resolve<User[]>{\r\n    constructor(private toDoListService: ToDoListService, private authService: AuthService, private signalRService: SignalRService)  {    }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<User[]> {\r\n      this.signalRService.startConnection();\r\n     // this.signalRService.addNewConnectionListener();\r\n      console.log(this.signalRService.getConectedUsers());\r\n      return this.signalRService.getConectedUsers();\r\n    }\r\n\r\n}\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\r\nimport { ToDoListService } from '../_Services/toDoList.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../_Services/auth.service';\r\nimport { User } from '../_Models/Users/User';\r\n\r\n@Injectable()\r\n\r\nexport class CurrentUser implements Resolve<User>{\r\n    constructor(private authService: AuthService) {    }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): User {\r\n        return  this.authService.getCurrentUser();\r\n    }\r\n\r\n}\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\r\nimport { ToDoListService } from '../_Services/toDoList.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../_Services/auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class ToDolistResolver implements Resolve<ToDoItem[]>{\r\n  currentPage = 1;\r\n  pageSize = 10;\r\n    constructor(private toDoListService: ToDoListService,private authService: AuthService) {    }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ToDoItem[]> {\r\n        return  this.toDoListService.getToDoItems(this.authService.getCurrentUserId(),this.currentPage,this.pageSize).pipe(\r\n        catchError(error =>\r\n          {\r\n            console.log(error);\r\n            return of(null);\r\n          }));\r\n    }\r\n\r\n}\r\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_Models/Users/User';\nimport {map, tap} from 'rxjs/operators';\nimport { empty } from 'rxjs';\nimport { SignalRService } from './signalRService.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n@Output() userDisconected  = new EventEmitter();\nconstructor(private httpService: HttpClient) {\nthis.baseUrl = environment.baseUrl;\n\n }\n  currentUser : User;\n  baseUrl: string;\n\n    getToken() {\n        return sessionStorage.getItem('token');\n    }\n\nlogin(data : any){\n\n return this.httpService.post(this.baseUrl + 'auth/login', data).pipe(\n   map((response: any) => {\n     const token = response['token'];\n     const user = response['user'];\n     if (token){\n       sessionStorage.setItem('token', token);\n     }\n     if (user){\n       sessionStorage.setItem('user', JSON.stringify(user));\n       this.currentUser = user;\n     }\n\n   })\n  );\n}\n\nlogout(){\n  \n  sessionStorage.clear();\n}\n\ngetCurrentUser(): any{\n\n  return JSON.parse(sessionStorage.getItem(\"user\"));\n\n}\n\nisLoggedIn():boolean{\n  return sessionStorage.getItem(\"token\") !== null;\n}\n\ngetCurrentUserId(){\n\n return JSON.parse(sessionStorage.getItem('user')).id;\n}\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError, } from 'rxjs';\r\nimport {catchError} from 'rxjs/internal/operators';\r\nimport { IErrorHandler } from 'src/app/ErrorHandlres/IErrorHandler';\r\nimport { Injectable, Injector } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class httpErrorInterceptor  implements HttpInterceptor{\r\n    constructor(private errorHandler: IErrorHandler ){}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                let errorText = '';\r\n                if ( (error instanceof HttpErrorResponse)){\r\n\r\n                    if (error.status === 0){ // conection refused\r\n                        errorText = 'Error has ocurred trying to connect to the server';\r\n                    }\r\n                    else{\r\n                         errorText = this.buildMessageError(error);\r\n                        }\r\n                    //console.log(this.errorHandler);\r\n                    this.errorHandler.handleError(errorText);\r\n                    return throwError(error.message);\r\n\r\n                }\r\n          })\r\n        );\r\n}\r\n\r\nbuildMessageError( error: HttpErrorResponse): string{\r\n    return error.error;\r\n}\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(public auth: AuthService) {}\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    if (this.auth.getCurrentUser() !== null)\r\n    {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.auth.getToken()}`\r\n      }\r\n    });\r\n}\r\n    return next.handle(request);\r\n  }\r\n}","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport * as signalR from '@aspnet/signalr';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_Models/Users/User';\nimport { AuthService } from './auth.service';\nimport { of, Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalRService {\n  private usersConnected: User[] = new Array();\n  private hubConnection: signalR.HubConnection;\n  @Output() newUserConected = new EventEmitter();\n  @Output() newTask = new EventEmitter();\n\n\nconstructor(private authService: AuthService,private localStorage: LocalStorage) {\n  this.hubConnection = new signalR.HubConnectionBuilder()\n  .withUrl(environment.baseUrlHub, {skipNegotiation: true,\n  transport: signalR.HttpTransportType.WebSockets, accessTokenFactory : () => this.authService.getToken() })\n  .build();\n}\n  public startConnection = () => {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n                            .withUrl(environment.baseUrlHub, {skipNegotiation: true,\n                            transport: signalR.HttpTransportType.WebSockets, accessTokenFactory : () => this.authService.getToken() })\n                            .build();\n\n    this.hubConnection.on('newConnection', (data: User[]) => { this.handleData(data); });\n    this.hubConnection.on('closeConnection', (data: User[]) => { this.handleData(data); });\n    this.hubConnection.on('newTask' ,(data: any) => { this.newTask.emit(data); });\n\n    this.hubConnection\n      .start()\n      .then((res: any) => console.log(res))\n      .catch(err => console.log('Error while starting connection: ' + environment.baseUrl + 'panel'));\n  }\n\n\n  public disconectUser(){\n    const usersConected = JSON.parse(localStorage.getItem(\"connectedUsers\"));\n    if (usersConected.length === 1){ // i am the last\n      localStorage.clear();\n   }\n    this.hubConnection.stop();\n  }\n\nprivate handleData(data: User[])\n{\n\n   localStorage.setItem('connectedUsers', JSON.stringify(data));\n   this.newUserConected.emit(data);\n\n}\n\npublic  getConectedUsers(){\n  const data =   localStorage.getItem('connectedUsers') ;\n  const res = JSON.parse(data) || [];\n  return res.map(res => res);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToDoListService {\nbaseUrl : string = environment.baseUrl\nconstructor(private http: HttpClient) { }\n\ngetToDoItems(userId: number, page, pageSize){\n\nlet params  = new HttpParams();\nparams = params.append(\"pageSize\", pageSize);\nparams = params.append(\"page\", page);\nreturn this.http.get<ToDoItem[]>(this.baseUrl + 'ToDoList/' + userId, {params})\n  .pipe(\n    map(response => {\n      return response;\n    })\n  );\n\n}\n\naddToDoItem(description: string){\n  return this.http.post(this.baseUrl + 'toDoList/addToDo', {'description': description});\n}\n\nmarkAsDone(id: number, completed : boolean){\n  console.log(completed)\n  return this.http.post(this.baseUrl + 'toDoList/changeState/' + id, {});\n\n}\n\nassign(idToDoItem: number, idUser: number){\n\n  return this.http.post(this.baseUrl + 'toDoList/assign/' + idToDoItem + \"/\" + idUser, {});\n\n}\ndeleteToDo(id){\n  return this.http.post(this.baseUrl + 'toDoList/delete/' + id , {});\n\n}\n}\n\n\n","import { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_Services/auth.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class AuthGuard  implements CanActivate{\n\n    constructor(private router: Router, private authService: AuthService) {\n    }\n    canActivate(): boolean{\n        if(this.authService.isLoggedIn()){\n            this.router.navigate(['/todolist']);\n            return false;\n        }\n        else{\n            return true;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ToDoListComponent } from './ToDoList/ToDoList.component';\nimport { ToDolistResolver } from './_Resolvers/toDoList.resolver';\nimport { LoginComponent } from './login/login.component';\nimport { ConnectedUsersResolver } from './_Resolvers/ConnectedUsersPanel.resolver';\nimport { CurrentUser } from './_Resolvers/currenUser.resolver';\nimport { AuthGuard } from './_guards/authGuard';\n\n\nconst routes: Routes = [ \n  { path: 'todolist', component: ToDoListComponent, resolve: {toDoItems : ToDolistResolver , conectedUsers : ConnectedUsersResolver,\n                                                              user: CurrentUser}},\n   { path: 'login', component: LoginComponent, canActivate: [AuthGuard]},\n   {path: '**' , component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, HostListener } from '@angular/core';\nimport { AuthService } from './_Services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n  title = 'ToDoListClient';\n  /**\n   *\n   */\n  constructor(private authService: AuthService) {\n    \n    \n  }\n/*  @HostListener('window:unload', ['$event'])\n  unloadHandler(event) {\n       this.authService.logout();\n   }\n  \n  @HostListener('window:beforeunload', ['$event'])\n  beforeUnloadHander(event) {\n    //this.authService.logout();\n  // localStorage.clear();\n  }*/\n \n}\n","<ngx-loading-bar color=\"#FF0000\" [height]=\"'4px'\" [diameter]=\"'4px'\" ></ngx-loading-bar>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { httpErrorInterceptor } from './_Services/http.interceptors/http.error.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { ToastErrorHandlerService } from './ErrorHandlres/ToastErrorHandler.service';\nimport { IErrorHandler } from './ErrorHandlres//IErrorHandler';\nimport { ToDoListComponent } from './ToDoList/ToDoList.component';\nimport { ToDoItemComponent } from './ToDoItem/ToDoItem.component';\nimport { ToDolistResolver } from './_Resolvers/toDoList.resolver';\nimport { TokenInterceptor } from './_Services/http.interceptors/token.interceptor';\nimport { UsersPanelComponent } from './users-panel/users-panel.component';\nimport { ConnectedUsersResolver } from './_Resolvers/ConnectedUsersPanel.resolver';\nimport { CurrentUser } from './_Resolvers/currenUser.resolver';\nimport { ModalAssignTodoitemComponent } from './modal-assign-todoitem/modal-assign-todoitem.component';\n@NgModule({\n   declarations: [\n      AppComponent,\n      LoginComponent,\n      ToDoListComponent,\n      ToDoItemComponent,\n      UsersPanelComponent,\n      ModalAssignTodoitemComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      HttpClientModule,\n      FormsModule,\n      BrowserAnimationsModule,\n      ToastrModule.forRoot(),\n      LoadingBarHttpClientModule,\n      AppRoutingModule,\n      InfiniteScrollModule\n   ],\n   providers: [\n      { provide: HTTP_INTERCEPTORS, useClass: httpErrorInterceptor, multi: true },\n      { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n      { provide: IErrorHandler, useClass: ToastErrorHandlerService },\n      ToDolistResolver,\n      ConnectedUsersResolver,\n      CurrentUser\n\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_Services/auth.service';\nimport { FormsModule }   from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../_Models/Users/User';\nimport { empty } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { SignalRService } from '../_Services/signalRService.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  modelInputLogin: userInputModel = new userInputModel() ;\n  user: User;\n  constructor(private authService: AuthService, private toastr: ToastrService, private router: Router, private signalR: SignalRService) {\n    this.modelInputLogin.userName = 'user1@gmail.com';\n    this.modelInputLogin.password = 'password';\n   }\n\n  ngOnInit() {\n  }\n\n  login(){\n    this.authService.login(this.modelInputLogin).subscribe(\n      next => {this.toastr.success(`welcome ${this.authService.getCurrentUser().userName}`);\n               this.router.navigate(['/todolist']);},\n      error => {console.log(error); },\n      () => {this.router.navigate(['/todolist']);});\n}\nloggedIn(){\n  return  ( this.authService.getCurrentUser() && !this.authService.getCurrentUser() !== null);\n}\n\nlogout(){\n   this.authService.logout();\n}\n}\nexport class userInputModel {\n  userName: string;\n  password: string;\n}\n","<body>\n  <div class=\"container-fluid\">\n   \n    <div class=\"row\">\n      <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n        <div class=\"card card-signin my-5\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title text-center\">Sign In</h5>\n            <form class=\"form-signin\" #loginForm=\"ngForm\" (submit)=\"login()\">\n              <div class=\"form-label-group\">\n                <input type=\"email\" name=\"userName\" class=\"form-control\"   placeholder=\"User Name\" \n                [(ngModel)]=\"modelInputLogin.userName\" required autofocus>\n              </div>\n\n              <div class=\"form-label-group\">\n                <input type=\"password\" name=\"password\" class=\"form-control\"  placeholder=\"Password\"\n                [(ngModel)]=\"modelInputLogin.password\"   required>\n                \n              </div>\n\n              <div class=\"custom-control custom-checkbox mb-3\">\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                <label class=\"custom-control-label\" for=\"customCheck1\">Remember password</label>\n              </div>\n              <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"\n              [disabled]=\"!loginForm.valid\"> >Sign in</button>\n              <hr class=\"my-4\">\n              <!--<button class=\"btn btn-lg btn-google btn-block text-uppercase\" type=\"submit\"><i class=\"fab fa-google mr-2\"></i> Sign in with Google</button>\n              <button class=\"btn btn-lg btn-facebook btn-block text-uppercase\" type=\"submit\"><i class=\"fab fa-facebook-f mr-2\"></i> Sign in with Facebook</button>-->\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToDoListService } from '../_Services/toDoList.service';\nimport { AuthService } from '../_Services/auth.service';\n\n\n@Component({\n  selector: 'app-modal-assign-todoitem',\n  templateUrl: './modal-assign-todoitem.component.html',\n  styleUrls: ['./modal-assign-todoitem.component.css']\n})\nexport class ModalAssignTodoitemComponent implements OnInit {\n\n  @Input() public users;\n  @Input() public todoitem;\n\n  constructor(private todoListService: ToDoListService,public activeModal: NgbActiveModal,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  assign(user){\n     this.todoListService.assign(this.todoitem.id,user.id).subscribe( res => {\n           this.todoitem = res;\n           this.activeModal.close(res);\n    });\n  }\ncanAssign(user){\n  console.log(this.authService.getCurrentUser().userName)\nreturn user.userName !== this.authService.getCurrentUser().userName;\n}\n}\n","\n<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Assign ToDo </h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <p> ToDo assigned to : {{todoitem.userName}}</p>\n  <ul class=\"list-group\"  *ngFor=\"let item of this.users\">\n    <li \n    *ngIf=\"todoitem.userName !== item.userName && this.canAssign(item)\"\n    class=\"list-group-item d-flex justify-content-between align-items-center\">\n       \n       {{item.userName}}\n      \n    <button class=\"btn btn-primary\" (click)=\"assign(item)\"> Assign </button>\n  </li>\n  </ul>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SignalRService } from '../_Services/signalRService.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_Models/Users/User';\nimport { AuthService } from '../_Services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-users-panel',\n  templateUrl: './users-panel.component.html',\n  styleUrls: ['./users-panel.component.css']\n})\nexport class UsersPanelComponent implements OnInit {\n  @Input() conectedUsers: User[];\n  constructor(private signalRService: SignalRService, private http: HttpClient, private authService: AuthService,\n              private route: ActivatedRoute, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n \n    this.signalRService.newUserConected.subscribe((next: User[]) => {\n          this.conectedUsers = next;\n    }\n    );\n\n  }\n  getCurrentUserId(){\n    return this.authService.getCurrentUserId();\n  }\n  canSendMessage(user){\n    return this.getCurrentUserId() !== user.id;\n  }\n}\n","<div class=\"page-content page-container\" id=\"page-content\">\n   \n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"list list-row block\">\n                    <ng-container *ngFor=\"let user of this.conectedUsers\">\n                    <div class=\"list-item\" data-id=\"19\" *ngIf=\"this.canSendMessage(user)\">\n                        <div>\n                        <span class=\"w-48 avatar gd-primary\">\n                            <img src=\"https://img.icons8.com/color/48/000000/administrator-male.png\" alt=\".\">\n                        </span>\n                        </div>\n                        <div class=\"flex\"> <span class=\"item-author text-color\" data-abc=\"true\">{{user.userName}}</span>\n                            <div class=\"item-except text-muted text-sm h-1x\">{{user.userName}}</div>\n                        </div>\n                        <div class=\"no-wrap\">\n                            <div class=\"item-date text-muted text-sm d-none d-md-block\"></div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://localhost:44367/api/',\n  baseUrlHub: 'https://localhost:44367/panel'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}