{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/ErrorHandlres/IErrorHandler.ts","webpack:///src/app/ErrorHandlres/ToastErrorHandler.service.ts","webpack:///src/app/ToDoItem/ToDoItem.component.ts","webpack:///src/app/ToDoItem/ToDoItem.component.html","webpack:///src/app/ToDoList/ToDoList.component.ts","webpack:///src/app/ToDoList/ToDoList.component.html","webpack:///src/app/_Resolvers/ConnectedUsersPanel.resolver.ts","webpack:///src/app/_Resolvers/currenUser.resolver.ts","webpack:///src/app/_Resolvers/toDoList.resolver.ts","webpack:///src/app/_Services/auth.service.ts","webpack:///src/app/_Services/http.interceptors/http.error.interceptor.ts","webpack:///src/app/_Services/http.interceptors/token.interceptor.ts","webpack:///src/app/_Services/signalRService.service.ts","webpack:///src/app/_Services/toDoList.service.ts","webpack:///src/app/_guards/authGuard.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/modal-assign-todoitem/modal-assign-todoitem.component.ts","webpack:///src/app/modal-assign-todoitem/modal-assign-todoitem.component.html","webpack:///src/app/users-panel/users-panel.component.ts","webpack:///src/app/users-panel/users-panel.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","IErrorHandler","ToastErrorHandlerService","toastService","error","providedIn","ToDoItemComponent","selector","templateUrl","styleUrls","ToDoListComponent","route","toDoListService","authService","router","signalRService","modalService","toastr","closeResult","currentPage","pageSize","data","subscribe","resul","currentUser","user","toDoItems","conectedUsers","newTask","res","isNew","unshift","info","addToDoItem","newToDoItem","next","success","logout","disconectUser","navigate","toDoId","markAsDone","modifyElements","item","objIndex","findIndex","obj","completed","userName","userRoles","x","role","todoitem","modalRef","open","componentInstance","users","getConectedUsers","result","index","tdi","reason","getToDoItems","getCurrentUserId","length","concat","end","addNewItems","document","documentElement","scrollTop","deleteToDo","splice","onScroll","ConnectedUsersResolver","state","startConnection","console","log","CurrentUser","getCurrentUser","ToDolistResolver","pipe","AuthService","httpService","userDisconected","baseUrl","sessionStorage","getItem","post","response","token","setItem","JSON","stringify","clear","parse","httpErrorInterceptor","errorHandler","handle","errorText","status","buildMessageError","handleError","message","TokenInterceptor","auth","request","clone","setHeaders","Authorization","getToken","SignalRService","localStorage","usersConnected","Array","newUserConected","hubConnection","withUrl","baseUrlHub","skipNegotiation","transport","WebSockets","accessTokenFactory","build","on","handleData","emit","start","err","usersConected","stop","map","ToDoListService","http","userId","page","params","append","get","description","idToDoItem","idUser","AuthGuard","isLoggedIn","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","provide","useClass","multi","declarations","providers","bootstrap","LoginComponent","signalR","modelInputLogin","userInputModel","password","login","ModalAssignTodoitemComponent","todoListService","activeModal","assign","close","UsersPanelComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport abstract class IErrorHandler {\n\n    public abstract handleError(error: string);\n}\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { IErrorHandler } from './IErrorHandler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastErrorHandlerService implements IErrorHandler {\n\nconstructor(private toastService: ToastrService) { }\n  handleError(error: string) {\n    this.toastService.error(error);\n  }\n \n\n}\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ToDoItem',\n  templateUrl: './ToDoItem.component.html',\n  styleUrls: ['./ToDoItem.component.css']\n})\nexport class ToDoItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  ToDoItem works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToDoListService } from '../_Services/toDoList.service';\nimport { AuthService } from '../_Services/auth.service';\nimport { User } from '../_Models/Users/User';\nimport { SignalRService } from '../_Services/signalRService.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalAssignTodoitemComponent } from '../modal-assign-todoitem/modal-assign-todoitem.component';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-ToDoList',\n  templateUrl: './ToDoList.component.html',\n  styleUrls: ['./ToDoList.component.css']\n})\nexport class ToDoListComponent implements OnInit {\n   newToDoItem: string;\n   toDoItems: ToDoItem[];\n   conectedUsers:  User[];\n   currentUser: User;\n   closeResult = '';\n  currentPage = 2;\n  pageSize = 10;\n  end: boolean;\n  constructor(private route: ActivatedRoute, private toDoListService: ToDoListService, private authService: AuthService,\n              private router: Router, private signalRService: SignalRService,private modalService: NgbModal,\n              private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(resul => {\n      this.currentUser = resul.user;\n    });\n\n    this.route.data.subscribe(resul => {\n      this.toDoItems = resul.toDoItems;\n    });\n\n    this.route.data.subscribe(resul  => this.conectedUsers = resul.conectedUsers);\n    this.signalRService.newTask.subscribe(res => {\n      res.isNew = true;\n      this.toDoItems.unshift(res);\n      this.toastr.info(\"you have a new task\")});\n  }\n\n  addToDoItem(){\n    this.toDoListService.addToDoItem(this.newToDoItem).subscribe((next: ToDoItem ) =>\n      {this.toastr.success(\"todo added!\");\n       this.toDoItems.unshift(next);\n       this.newToDoItem = \"\";\n    });\n  }\n\n  logout(){\n    this.authService.logout();\n    this.signalRService.disconectUser();\n    this.router.navigate(['/login']);\n  }\n\n  markAsDone(toDoId){\n    this.toDoListService.markAsDone(toDoId, true).subscribe((data: ToDoItem) => {\n     this.modifyElements(data);\n    });\n  }\n  onEnter() {\n  this.addToDoItem();\n   }\n\n  modifyElements(item: ToDoItem){\n\n   const  objIndex = this.toDoItems.findIndex((obj => obj.id === item.id));\n   this.toDoItems[objIndex].completed = item.completed;\n  }\n  getUserData(){\n    return  this.authService.currentUser.userName;\n  }\n  currentUserIsAdmin(){\n    return (this.currentUser.userRoles.findIndex(x => x.role === 'Admin') !== -1);\n  }\n  open(todoitem) {\n   const modalRef =  this.modalService.open(ModalAssignTodoitemComponent)\n   modalRef.componentInstance.users = this.signalRService.getConectedUsers();\n   modalRef.componentInstance.todoitem = todoitem;\n   modalRef.result.then(res => {\n    const index = this.toDoItems.findIndex(tdi => tdi.id === res.id);\n    this.toDoItems[index] = res;\n  }, (reason) => {});\n\n  }\n\n  private addNewItems(){\n    this.toDoListService.getToDoItems(this.authService.getCurrentUserId(),this.currentPage,this.pageSize).subscribe( \n      (res: ToDoItem[]) =>{\n        if(res.length > 0)\n        {\n         this.toDoItems = this.toDoItems.concat(res);\n        }\n        else{\n          this.end = true\n        }\n        });\n  }\n  \n  onScroll(){\n  this.addNewItems();\n  this.currentPage = this.currentPage + 1;\n}\nisAll(){\n  return this.end;\n}\n\nbackToTheTop(){\n  document.documentElement.scrollTop = 0;\n}\ndeleteToDo(id){\n\n  this.toDoListService.deleteToDo(id).subscribe((res: ToDoItem ) =>{\n    const index = this.toDoItems.findIndex( item => item.id === res.id);\n    this.toDoItems.splice(index, 1);\n  });\n}\n\n\n\n}\n","<div class=\"col-12\">\n  <div class=\"row\">\n    <div class=\"col-12 ml-auto text-center py-2\">\n      <img src=\"https://img.icons8.com/color/48/000000/administrator-male.png\" class=\"rounded-circle\" alt=\"Cinque Terre\"><br>\n       <p><b>Welcome {{this.currentUser.userName}}</b></p>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-success\" (click)=\"this.logout()\">Logout User</button>\n        </div>\n    </div>\n    \n</div>\n  </div>\n<div class=\"page-container\" id=\"page-content\">\n  <div class=\"padding\">\n   \n      <div class=\"row container d-flex justify-content-center\">\n          <div class=\"col-sm-4\">\n           \n                <app-users-panel [conectedUsers]=\"this.conectedUsers\"></app-users-panel>\n            </div>     \n          <div class=\"col-sm-8\">\n              <div class=\"row\">\n                <div class=\"input-group\"> \n                    <span class=\"input-group-text\"> \n                      <i class=\"fa fa-plus\"></i> \n                    </span> \n                    <input type=\"text\" class=\"form-control\"\n                           placeholder=\"Add todo item\" \n                           id=\"box\" style=\"width: 30vw\"\n                           (keydown.enter)=\"addToDoItem()\" \n                           [(ngModel)]=\"newToDoItem\"/> \n                </div> \n              </div>\n              <br/> \n            <div class=\"row\">\n              <div class=\"container\" infiniteScroll \n                   [infiniteScrollDistance]=\"1\" \n                   [infiniteScrollThrottle]=\"50\"\n                  (scrolled)=\"onScroll()\">\n                <table class=\"table table-striped table-dark\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Assigned To</th>\n                        <th scope=\"col\">Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr [ngClass]=\"{'newItem ': todo.isNew}\"*ngFor=\"let todo of this.toDoItems\">\n                        <td>{{todo.description}}</td>\n                        <td>{{todo.userName}}</td>\n                        <td>\n                            <span style=\"cursor: pointer;\" class=\"icon-stack\" title=\"mark as done\">  <i *ngIf=\"!todo.completed\" class=\"fa fa-check-circle\" (click)=\"markAsDone(todo.id)\" ></i></span>\n                            <span style=\"cursor: pointer;\" class=\"icon-stack\" title=\"mark as pending\"><i *ngIf=\"todo.completed\"  class=\"fa fa-clock-o\" (click)=\"markAsDone(todo.id)\" ></i></span>\n                            &nbsp;<span style=\"cursor: pointer;color:red;\" class=\"icon-stack\" title=\"delete\">\n                              <i   class=\"fa fa-trash\" (click)=\"deleteToDo(todo.id)\" ></i></span>\n\n                        </td>\n                        <td *ngIf=\"this.currentUserIsAdmin()\">\n                            <span class=\"icon-stack\"><i class=\"fa fa-user-plus\" (click)=\"open(todo)\"></i></span>\n\n                        </td>\n                    </tr>  \n                    </tbody>   \n                </table>\n                <div class=\"row\">\n                  <div class=\"col text-center\">\n                    <button *ngIf=\"this.isAll()\" (click)=\"backToTheTop()\" class=\"btn btn-link\"><i class=\"fa fa-angle-double-up\">\n                    </i>back to top</button> \n                  </div>\n                </div>  \n               </div>                      \n          </div>\n      </div>\n  </div>\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\r\nimport { ToDoListService } from '../_Services/toDoList.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../_Services/auth.service';\r\nimport { User } from '../_Models/Users/User';\r\nimport { SignalRService } from '../_Services/signalRService.service';\r\n\r\n@Injectable()\r\n\r\nexport class ConnectedUsersResolver implements Resolve<User[]>{\r\n    constructor(private toDoListService: ToDoListService, private authService: AuthService, private signalRService: SignalRService)  {    }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<User[]> {\r\n      this.signalRService.startConnection();\r\n     // this.signalRService.addNewConnectionListener();\r\n      console.log(this.signalRService.getConectedUsers());\r\n      return this.signalRService.getConectedUsers();\r\n    }\r\n\r\n}\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\r\nimport { ToDoListService } from '../_Services/toDoList.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../_Services/auth.service';\r\nimport { User } from '../_Models/Users/User';\r\n\r\n@Injectable()\r\n\r\nexport class CurrentUser implements Resolve<User>{\r\n    constructor(private authService: AuthService) {    }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): User {\r\n        return  this.authService.getCurrentUser();\r\n    }\r\n\r\n}\r\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\r\nimport { ToDoListService } from '../_Services/toDoList.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '../_Services/auth.service';\r\n\r\n@Injectable()\r\n\r\nexport class ToDolistResolver implements Resolve<ToDoItem[]>{\r\n  currentPage = 1;\r\n  pageSize = 10;\r\n    constructor(private toDoListService: ToDoListService,private authService: AuthService) {    }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ToDoItem[]> {\r\n        return  this.toDoListService.getToDoItems(this.authService.getCurrentUserId(),this.currentPage,this.pageSize).pipe(\r\n        catchError(error =>\r\n          {\r\n            console.log(error);\r\n            return of(null);\r\n          }));\r\n    }\r\n\r\n}\r\n","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_Models/Users/User';\nimport {map, tap} from 'rxjs/operators';\nimport { empty } from 'rxjs';\nimport { SignalRService } from './signalRService.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n@Output() userDisconected  = new EventEmitter();\nconstructor(private httpService: HttpClient) {\nthis.baseUrl = environment.baseUrl;\n\n }\n  currentUser : User;\n  baseUrl: string;\n\n    getToken() {\n        return sessionStorage.getItem('token');\n    }\n\nlogin(data : any){\n\n return this.httpService.post(this.baseUrl + 'auth/login', data).pipe(\n   map((response: any) => {\n     const token = response['token'];\n     const user = response['user'];\n     if (token){\n       sessionStorage.setItem('token', token);\n     }\n     if (user){\n       sessionStorage.setItem('user', JSON.stringify(user));\n       this.currentUser = user;\n     }\n\n   })\n  );\n}\n\nlogout(){\n  \n  sessionStorage.clear();\n}\n\ngetCurrentUser(): any{\n\n  return JSON.parse(sessionStorage.getItem(\"user\"));\n\n}\n\nisLoggedIn():boolean{\n  return sessionStorage.getItem(\"token\") !== null;\n}\n\ngetCurrentUserId(){\n\n return JSON.parse(sessionStorage.getItem('user')).id;\n}\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError, } from 'rxjs';\r\nimport {catchError} from 'rxjs/internal/operators';\r\nimport { IErrorHandler } from 'src/app/ErrorHandlres/IErrorHandler';\r\nimport { Injectable, Injector } from '@angular/core';\r\n\r\n@Injectable()\r\n\r\nexport class httpErrorInterceptor  implements HttpInterceptor{\r\n    constructor(private errorHandler: IErrorHandler ){}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n                let errorText = '';\r\n                if ( (error instanceof HttpErrorResponse)){\r\n\r\n                    if (error.status === 0){ // conection refused\r\n                        errorText = 'Error has ocurred trying to connect to the server';\r\n                    }\r\n                    else{\r\n                         errorText = this.buildMessageError(error);\r\n                        }\r\n                    //console.log(this.errorHandler);\r\n                    this.errorHandler.handleError(errorText);\r\n                    return throwError(error.message);\r\n\r\n                }\r\n          })\r\n        );\r\n}\r\n\r\nbuildMessageError( error: HttpErrorResponse): string{\r\n    return error.error;\r\n}\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(public auth: AuthService) {}\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    \r\n    if (this.auth.getCurrentUser() !== null)\r\n    {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.auth.getToken()}`\r\n      }\r\n    });\r\n}\r\n    return next.handle(request);\r\n  }\r\n}","import { Injectable, EventEmitter, Output } from '@angular/core';\nimport * as signalR from '@aspnet/signalr';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_Models/Users/User';\nimport { AuthService } from './auth.service';\nimport { of, Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalRService {\n  private usersConnected: User[] = new Array();\n  private hubConnection: signalR.HubConnection;\n  @Output() newUserConected = new EventEmitter();\n  @Output() newTask = new EventEmitter();\n\n\nconstructor(private authService: AuthService,private localStorage: LocalStorage) {\n  this.hubConnection = new signalR.HubConnectionBuilder()\n  .withUrl(environment.baseUrlHub, {skipNegotiation: true,\n  transport: signalR.HttpTransportType.WebSockets, accessTokenFactory : () => this.authService.getToken() })\n  .build();\n}\n  public startConnection = () => {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n                            .withUrl(environment.baseUrlHub, {skipNegotiation: true,\n                            transport: signalR.HttpTransportType.WebSockets, accessTokenFactory : () => this.authService.getToken() })\n                            .build();\n\n    this.hubConnection.on('newConnection', (data: User[]) => { this.handleData(data); });\n    this.hubConnection.on('closeConnection', (data: User[]) => { this.handleData(data); });\n    this.hubConnection.on('newTask' ,(data: any) => { this.newTask.emit(data); });\n\n    this.hubConnection\n      .start()\n      .then((res: any) => console.log(res))\n      .catch(err => console.log('Error while starting connection: ' + environment.baseUrl + 'panel'));\n  }\n\n\n  public disconectUser(){\n    const usersConected = JSON.parse(localStorage.getItem(\"connectedUsers\"));\n    if (usersConected.length === 1){ // i am the last\n      localStorage.clear();\n   }\n    this.hubConnection.stop();\n  }\n\nprivate handleData(data: User[])\n{\n\n   localStorage.setItem('connectedUsers', JSON.stringify(data));\n   this.newUserConected.emit(data);\n\n}\n\npublic  getConectedUsers(){\n  const data =   localStorage.getItem('connectedUsers') ;\n  const res = JSON.parse(data) || [];\n  return res.map(res => res);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { ToDoItem } from '../_Models/ToDoList/ToDoItem';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToDoListService {\nbaseUrl : string = environment.baseUrl\nconstructor(private http: HttpClient) { }\n\ngetToDoItems(userId: number, page, pageSize){\n\nlet params  = new HttpParams();\nparams = params.append(\"pageSize\", pageSize);\nparams = params.append(\"page\", page);\nreturn this.http.get<ToDoItem[]>(this.baseUrl + 'ToDoList/' + userId, {params})\n  .pipe(\n    map(response => {\n      return response;\n    })\n  );\n\n}\n\naddToDoItem(description: string){\n  return this.http.post(this.baseUrl + 'toDoList/addToDo', {'description': description});\n}\n\nmarkAsDone(id: number, completed : boolean){\n  console.log(completed)\n  return this.http.post(this.baseUrl + 'toDoList/changeState/' + id, {});\n\n}\n\nassign(idToDoItem: number, idUser: number){\n\n  return this.http.post(this.baseUrl + 'toDoList/assign/' + idToDoItem + \"/\" + idUser, {});\n\n}\ndeleteToDo(id){\n  return this.http.post(this.baseUrl + 'toDoList/delete/' + id , {});\n\n}\n}\n\n\n","import { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_Services/auth.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class AuthGuard  implements CanActivate{\n\n    constructor(private router: Router, private authService: AuthService) {\n    }\n    canActivate(): boolean{\n        if(this.authService.isLoggedIn()){\n            this.router.navigate(['/todolist']);\n            return false;\n        }\n        else{\n            return true;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ToDoListComponent } from './ToDoList/ToDoList.component';\nimport { ToDolistResolver } from './_Resolvers/toDoList.resolver';\nimport { LoginComponent } from './login/login.component';\nimport { ConnectedUsersResolver } from './_Resolvers/ConnectedUsersPanel.resolver';\nimport { CurrentUser } from './_Resolvers/currenUser.resolver';\nimport { AuthGuard } from './_guards/authGuard';\n\n\nconst routes: Routes = [ \n  { path: 'todolist', component: ToDoListComponent, resolve: {toDoItems : ToDolistResolver , conectedUsers : ConnectedUsersResolver,\n                                                              user: CurrentUser}},\n   { path: 'login', component: LoginComponent, canActivate: [AuthGuard]},\n   {path: '**' , component: LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, HostListener } from '@angular/core';\nimport { AuthService } from './_Services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n  title = 'ToDoListClient';\n  /**\n   *\n   */\n  constructor(private authService: AuthService) {\n    \n    \n  }\n/*  @HostListener('window:unload', ['$event'])\n  unloadHandler(event) {\n       this.authService.logout();\n   }\n  \n  @HostListener('window:beforeunload', ['$event'])\n  beforeUnloadHander(event) {\n    //this.authService.logout();\n  // localStorage.clear();\n  }*/\n \n}\n","<ngx-loading-bar color=\"#FF0000\" [height]=\"'4px'\" [diameter]=\"'4px'\" ></ngx-loading-bar>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { httpErrorInterceptor } from './_Services/http.interceptors/http.error.interceptor';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { ToastErrorHandlerService } from './ErrorHandlres/ToastErrorHandler.service';\nimport { IErrorHandler } from './ErrorHandlres//IErrorHandler';\nimport { ToDoListComponent } from './ToDoList/ToDoList.component';\nimport { ToDoItemComponent } from './ToDoItem/ToDoItem.component';\nimport { ToDolistResolver } from './_Resolvers/toDoList.resolver';\nimport { TokenInterceptor } from './_Services/http.interceptors/token.interceptor';\nimport { UsersPanelComponent } from './users-panel/users-panel.component';\nimport { ConnectedUsersResolver } from './_Resolvers/ConnectedUsersPanel.resolver';\nimport { CurrentUser } from './_Resolvers/currenUser.resolver';\nimport { ModalAssignTodoitemComponent } from './modal-assign-todoitem/modal-assign-todoitem.component';\n@NgModule({\n   declarations: [\n      AppComponent,\n      LoginComponent,\n      ToDoListComponent,\n      ToDoItemComponent,\n      UsersPanelComponent,\n      ModalAssignTodoitemComponent\n   ],\n   imports: [\n      BrowserModule,\n      AppRoutingModule,\n      HttpClientModule,\n      FormsModule,\n      BrowserAnimationsModule,\n      ToastrModule.forRoot(),\n      LoadingBarHttpClientModule,\n      AppRoutingModule,\n      InfiniteScrollModule\n   ],\n   providers: [\n      { provide: HTTP_INTERCEPTORS, useClass: httpErrorInterceptor, multi: true },\n      { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n      { provide: IErrorHandler, useClass: ToastErrorHandlerService },\n      ToDolistResolver,\n      ConnectedUsersResolver,\n      CurrentUser\n\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_Services/auth.service';\nimport { FormsModule }   from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from '../_Models/Users/User';\nimport { empty } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { SignalRService } from '../_Services/signalRService.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  modelInputLogin: userInputModel = new userInputModel() ;\n  user: User;\n  constructor(private authService: AuthService, private toastr: ToastrService, private router: Router, private signalR: SignalRService) {\n    this.modelInputLogin.userName = 'user1@gmail.com';\n    this.modelInputLogin.password = 'password';\n   }\n\n  ngOnInit() {\n  }\n\n  login(){\n    this.authService.login(this.modelInputLogin).subscribe(\n      next => {this.toastr.success(`welcome ${this.authService.getCurrentUser().userName}`);\n               this.router.navigate(['/todolist']);},\n      error => {console.log(error); },\n      () => {this.router.navigate(['/todolist']);});\n}\nloggedIn(){\n  return  ( this.authService.getCurrentUser() && !this.authService.getCurrentUser() !== null);\n}\n\nlogout(){\n   this.authService.logout();\n}\n}\nexport class userInputModel {\n  userName: string;\n  password: string;\n}\n","<body>\n  <div class=\"container-fluid\">\n   \n    <div class=\"row\">\n      <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n        <div class=\"card card-signin my-5\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title text-center\">Sign In</h5>\n            <form class=\"form-signin\" #loginForm=\"ngForm\" (submit)=\"login()\">\n              <div class=\"form-label-group\">\n                <input type=\"email\" name=\"userName\" class=\"form-control\"   placeholder=\"User Name\" \n                [(ngModel)]=\"modelInputLogin.userName\" required autofocus>\n              </div>\n\n              <div class=\"form-label-group\">\n                <input type=\"password\" name=\"password\" class=\"form-control\"  placeholder=\"Password\"\n                [(ngModel)]=\"modelInputLogin.password\"   required>\n                \n              </div>\n\n              <div class=\"custom-control custom-checkbox mb-3\">\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                <label class=\"custom-control-label\" for=\"customCheck1\">Remember password</label>\n              </div>\n              <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\"\n              [disabled]=\"!loginForm.valid\"> >Sign in</button>\n              <hr class=\"my-4\">\n              <!--<button class=\"btn btn-lg btn-google btn-block text-uppercase\" type=\"submit\"><i class=\"fab fa-google mr-2\"></i> Sign in with Google</button>\n              <button class=\"btn btn-lg btn-facebook btn-block text-uppercase\" type=\"submit\"><i class=\"fab fa-facebook-f mr-2\"></i> Sign in with Facebook</button>-->\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToDoListService } from '../_Services/toDoList.service';\nimport { AuthService } from '../_Services/auth.service';\n\n\n@Component({\n  selector: 'app-modal-assign-todoitem',\n  templateUrl: './modal-assign-todoitem.component.html',\n  styleUrls: ['./modal-assign-todoitem.component.css']\n})\nexport class ModalAssignTodoitemComponent implements OnInit {\n\n  @Input() public users;\n  @Input() public todoitem;\n\n  constructor(private todoListService: ToDoListService,public activeModal: NgbActiveModal,\n              private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  assign(user){\n     this.todoListService.assign(this.todoitem.id,user.id).subscribe( res => {\n           this.todoitem = res;\n           this.activeModal.close(res);\n    });\n  }\ncanAssign(user){\n  console.log(this.authService.getCurrentUser().userName)\nreturn user.userName !== this.authService.getCurrentUser().userName;\n}\n}\n","\n<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Assign ToDo </h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <p> ToDo assigned to : {{todoitem.userName}}</p>\n  <ul class=\"list-group\"  *ngFor=\"let item of this.users\">\n    <li \n    *ngIf=\"todoitem.userName !== item.userName && this.canAssign(item)\"\n    class=\"list-group-item d-flex justify-content-between align-items-center\">\n       \n       {{item.userName}}\n      \n    <button class=\"btn btn-primary\" (click)=\"assign(item)\"> Assign </button>\n  </li>\n  </ul>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { SignalRService } from '../_Services/signalRService.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_Models/Users/User';\nimport { AuthService } from '../_Services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-users-panel',\n  templateUrl: './users-panel.component.html',\n  styleUrls: ['./users-panel.component.css']\n})\nexport class UsersPanelComponent implements OnInit {\n  @Input() conectedUsers: User[];\n  constructor(private signalRService: SignalRService, private http: HttpClient, private authService: AuthService,\n              private route: ActivatedRoute, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n \n    this.signalRService.newUserConected.subscribe((next: User[]) => {\n          this.conectedUsers = next;\n    }\n    );\n\n  }\n  getCurrentUserId(){\n    return this.authService.getCurrentUserId();\n  }\n  canSendMessage(user){\n    return this.getCurrentUserId() !== user.id;\n  }\n}\n","<div class=\"page-content page-container\" id=\"page-content\">\n   \n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"list list-row block\">\n                    <ng-container *ngFor=\"let user of this.conectedUsers\">\n                    <div class=\"list-item\" data-id=\"19\" *ngIf=\"this.canSendMessage(user)\">\n                        <div>\n                        <span class=\"w-48 avatar gd-primary\">\n                            <img src=\"https://img.icons8.com/color/48/000000/administrator-male.png\" alt=\".\">\n                        </span>\n                        </div>\n                        <div class=\"flex\"> <span class=\"item-author text-color\" data-abc=\"true\">{{user.userName}}</span>\n                            <div class=\"item-except text-muted text-sm h-1x\">{{user.userName}}</div>\n                        </div>\n                        <div class=\"no-wrap\">\n                            <div class=\"item-date text-muted text-sm d-none d-md-block\"></div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://localhost:44367/api/',\n  baseUrlHub: 'https://localhost:44367/panel'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}